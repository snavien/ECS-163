<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_65) on Thu Apr 03 13:38:30 BST 2014 -->
<TITLE>
TreeMapProperties
</TITLE>

<META NAME="date" CONTENT="2014-04-03">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../processingapi.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TreeMapProperties";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TreeMapProperties.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapPanel.html" title="class in org.gicentre.treemappa"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/gicentre/treemappa/Version.html" title="class in org.gicentre.treemappa"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/gicentre/treemappa/TreeMapProperties.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TreeMapProperties.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.gicentre.treemappa</FONT>
<BR>
Class TreeMapProperties</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.gicentre.treemappa.TreeMapProperties</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>TreeMapProperties</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
Provides a persistent store of all treeMappa configuration options such as layout, text colours etc.
  This can be instantiated at run time, saved to and loaded from a file and passed to a TreeMappa object.
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>3.2.1, 3rd April, 2014.</DD>
<DT><B>Author:</B></DT>
  <DD>Jo Wood, giCentre.</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#TreeMapProperties()">TreeMapProperties</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a default set of treeMappa properties.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getAlignments()">getAlignments</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered alignment settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getAllowVerticalLabels()">getAllowVerticalLabels</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not labels can have vertical text.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Color</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBorderColour()">getBorderColour</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the colour used to display borders</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBorders()">getBorders</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered border width settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBorderWeights()">getBorderWeights</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered border weight settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBranchAlignX()">getBranchAlignX</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the Processing branch text horizontal alignment type, one of LEFT, CENTER or RIGHT.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBranchAlignY()">getBranchAlignY</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the Processing branch text vertical alignment type, one of TOP, CENTER or BOTTOM.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBranchMaxTextSizes()">getBranchMaxTextSizes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered maximum branch text size settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Color[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBranchTextColours()">getBranchTextColours</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered branch text colour settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBranchTextFonts()">getBranchTextFonts</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered branch text font names for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getBranchVectorWidths()">getBranchVectorWidths</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered vector width settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getConfigFileName()">getConfigFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the name of the file used to save this configuration or null if not to be saved.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getCTableFileName()">getCTableFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the name of the file used for the treemap colour table.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getCurveRadius()">getCurveRadius</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the curvature radius for rectangles.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getFileType()">getFileType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the file type used for defining the hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getHeight()">getHeight</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the height of the treemap in pixels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getImageFileName()">getImageFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the name of the file used for image output.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getInFileName()">getInFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the name of the file used for defining the hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getIsTransparent()">getIsTransparent</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not transparency should be used when constructing the treemap graphic.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getIsVerbose()">getIsVerbose</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not verbose reporting of progress is required.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLabelBranches()">getLabelBranches</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not branches are to be labelled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLabelLeaves()">getLabelLeaves</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not leaves are to be labelled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLayouts()">getLayouts</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of ordered layout settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafAlignX()">getLeafAlignX</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the Processing leaf text horizontal alignment type, one of LEFT, CENTER or RIGHT.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafAlignY()">getLeafAlignY</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the Processing leaf text vertical alignment type, one of TOP, CENTER or BOTTOM.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Color</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafBorderColour()">getLeafBorderColour</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the colour used to display leaf borders.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafBorderWeight()">getLeafBorderWeight</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the line thickness used to display leaf borders.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafMaxTextSize()">getLeafMaxTextSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the maximum leaf text size pixels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.Color</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafTextColour()">getLeafTextColour</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the colour used to display leaf labels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafTextFont()">getLeafTextFont</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the name of the font used to display leaf labels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getLeafVectorWidth()">getLeafVectorWidth</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the width of leaf displacement vectors in pixels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;float</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getMutation()">getMutation</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the mutation index that controls the degree of colour mutation when using evolutionary colour scheme.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getOutFileName()">getOutFileName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the name of the file used for treemap coordinate output.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getRandColourLevel()">getRandColourLevel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the level at which random colour mutation should occur when using an evolutionary colour scheme.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getSeed()">getSeed</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the random seed when using an evolutionary colour scheme.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getShowArrowHead()">getShowArrowHead</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not arrow heads are to be drawn on displacement vectors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getShowBranchDisplacements()">getShowBranchDisplacements</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a set of branch displacement display settings for each level of the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getShowLeafBorder()">getShowLeafBorder</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not leaf nodes are shown with borders.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getShowLeafDisplacement()">getShowLeafDisplacement</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not leaf displacement vectors are to be drawn.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getShowStatistics()">getShowStatistics</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not treemap statistics are to be reported.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getShowTreeView()">getShowTreeView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not a collapsable tree view is to be shown.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getTextOnly()">getTextOnly</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not text only output is required.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getUseLabels()">getUseLabels</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not labels are used to define the treemap hierarchy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#getWidth()">getWidth</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the width of the treemap in pixels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#load(java.io.InputStream)">load</A></B>(java.io.InputStream&nbsp;inStream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loads a set of treemappa configuration options from an XML file from the given
  input stream.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#load(java.lang.String)">load</A></B>(java.lang.String&nbsp;fileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loads a set of treemappa configuration options from an XML file with the given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#save(java.lang.String)">save</A></B>(java.lang.String&nbsp;fileName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Saves these treeMappa properties to an XML file with the given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html#setParameter(java.lang.String, java.lang.String)">setParameter</A></B>(java.lang.String&nbsp;key,
             java.lang.String&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the given property with the given value.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TreeMapProperties()"><!-- --></A><H3>
TreeMapProperties</H3>
<PRE>
public <B>TreeMapProperties</B>()</PRE>
<DL>
<DD>Creates a default set of treeMappa properties.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setParameter(java.lang.String, java.lang.String)"><!-- --></A><H3>
setParameter</H3>
<PRE>
public boolean <B>setParameter</B>(java.lang.String&nbsp;key,
                            java.lang.String&nbsp;value)</PRE>
<DL>
<DD>Sets the given property with the given value. All values are treated as strings even
  if they represent numeric or boolean parameters. Values are case-insensitive with the
  exception of file names and text labels.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - Parameter whose value is to be set.<DD><CODE>value</CODE> - Value of parameter.
<DT><B>Returns:</B><DD>True if the parameter and its value are valid.</DL>
</DD>
</DL>
<HR>

<A NAME="save(java.lang.String)"><!-- --></A><H3>
save</H3>
<PRE>
public boolean <B>save</B>(java.lang.String&nbsp;fileName)</PRE>
<DL>
<DD>Saves these treeMappa properties to an XML file with the given name.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fileName</CODE> - Name of XML file to store the treemappa configuration options.
<DT><B>Returns:</B><DD>True if properties saved without problems.</DL>
</DD>
</DL>
<HR>

<A NAME="load(java.lang.String)"><!-- --></A><H3>
load</H3>
<PRE>
public boolean <B>load</B>(java.lang.String&nbsp;fileName)</PRE>
<DL>
<DD>Loads a set of treemappa configuration options from an XML file with the given name.
  The options all have defaults so the configuration file need only contain non-default
  options.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fileName</CODE> - Name of XML file from which to retrieve the treemappa configuration.
<DT><B>Returns:</B><DD>True if configuration file loaded without problems.</DL>
</DD>
</DL>
<HR>

<A NAME="load(java.io.InputStream)"><!-- --></A><H3>
load</H3>
<PRE>
public boolean <B>load</B>(java.io.InputStream&nbsp;inStream)</PRE>
<DL>
<DD>Loads a set of treemappa configuration options from an XML file from the given
  input stream.
  The options all have defaults so the configuration file need only contain non-default
  options.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>inStream</CODE> - Input stream containing the XML file from which to retrieve the treemappa configuration.
<DT><B>Returns:</B><DD>True if configuration file loaded without problems.</DL>
</DD>
</DL>
<HR>

<A NAME="getTextOnly()"><!-- --></A><H3>
getTextOnly</H3>
<PRE>
public boolean <B>getTextOnly</B>()</PRE>
<DL>
<DD>Reports whether or not text only output is required.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if only text output is to be used.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowArrowHead()"><!-- --></A><H3>
getShowArrowHead</H3>
<PRE>
public boolean <B>getShowArrowHead</B>()</PRE>
<DL>
<DD>Reports whether or not arrow heads are to be drawn on displacement vectors.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if arrow heads are to be drawn on displacement vectors.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowLeafDisplacement()"><!-- --></A><H3>
getShowLeafDisplacement</H3>
<PRE>
public boolean <B>getShowLeafDisplacement</B>()</PRE>
<DL>
<DD>Reports whether or not leaf displacement vectors are to be drawn.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if leaf displacement vectors are to be drawn.</DL>
</DD>
</DL>
<HR>

<A NAME="getIsVerbose()"><!-- --></A><H3>
getIsVerbose</H3>
<PRE>
public boolean <B>getIsVerbose</B>()</PRE>
<DL>
<DD>Reports whether or not verbose reporting of progress is required.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if verbose progress reports are requested.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowStatistics()"><!-- --></A><H3>
getShowStatistics</H3>
<PRE>
public boolean <B>getShowStatistics</B>()</PRE>
<DL>
<DD>Reports whether or not treemap statistics are to be reported.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if treemap statistics are to be reported.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowTreeView()"><!-- --></A><H3>
getShowTreeView</H3>
<PRE>
public boolean <B>getShowTreeView</B>()</PRE>
<DL>
<DD>Reports whether or not a collapsable tree view is to be shown.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if a collapsable tree view is to be shown.</DL>
</DD>
</DL>
<HR>

<A NAME="getLabelLeaves()"><!-- --></A><H3>
getLabelLeaves</H3>
<PRE>
public boolean <B>getLabelLeaves</B>()</PRE>
<DL>
<DD>Reports whether or not leaves are to be labelled.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if leaves are to have labels.</DL>
</DD>
</DL>
<HR>

<A NAME="getLabelBranches()"><!-- --></A><H3>
getLabelBranches</H3>
<PRE>
public boolean <B>getLabelBranches</B>()</PRE>
<DL>
<DD>Reports whether or not branches are to be labelled.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if branches are to have labels.</DL>
</DD>
</DL>
<HR>

<A NAME="getAllowVerticalLabels()"><!-- --></A><H3>
getAllowVerticalLabels</H3>
<PRE>
public boolean <B>getAllowVerticalLabels</B>()</PRE>
<DL>
<DD>Reports whether or not labels can have vertical text.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if labels can have vertical text when inside tall thin rectangles.</DL>
</DD>
</DL>
<HR>

<A NAME="getIsTransparent()"><!-- --></A><H3>
getIsTransparent</H3>
<PRE>
public boolean <B>getIsTransparent</B>()</PRE>
<DL>
<DD>Reports whether or not transparency should be used when constructing the treemap graphic.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True transparency is used in rendering graphics.</DL>
</DD>
</DL>
<HR>

<A NAME="getUseLabels()"><!-- --></A><H3>
getUseLabels</H3>
<PRE>
public boolean <B>getUseLabels</B>()</PRE>
<DL>
<DD>Reports whether or not labels are used to define the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if labels are used to define the treemap hierarchy.</DL>
</DD>
</DL>
<HR>

<A NAME="getRandColourLevel()"><!-- --></A><H3>
getRandColourLevel</H3>
<PRE>
public int <B>getRandColourLevel</B>()</PRE>
<DL>
<DD>Provides the level at which random colour mutation should occur when using an evolutionary colour scheme.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Hierarchy level at which random colour mutation can occur.</DL>
</DD>
</DL>
<HR>

<A NAME="getSeed()"><!-- --></A><H3>
getSeed</H3>
<PRE>
public long <B>getSeed</B>()</PRE>
<DL>
<DD>Provides the random seed when using an evolutionary colour scheme. If the seed is not zero, the same
  random colours will be used on subsequent renderings of the same treemap data. The particular colours
  will be dependent on that seed value. If zero, a different random sequence is used each time.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Hierarchy level at which random colour mutation can occur.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafTextColour()"><!-- --></A><H3>
getLeafTextColour</H3>
<PRE>
public java.awt.Color <B>getLeafTextColour</B>()</PRE>
<DL>
<DD>Provides the colour used to display leaf labels.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Colour used to display leaf labels.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafBorderColour()"><!-- --></A><H3>
getLeafBorderColour</H3>
<PRE>
public java.awt.Color <B>getLeafBorderColour</B>()</PRE>
<DL>
<DD>Provides the colour used to display leaf borders.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Colour used to display leaf borders.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafBorderWeight()"><!-- --></A><H3>
getLeafBorderWeight</H3>
<PRE>
public float <B>getLeafBorderWeight</B>()</PRE>
<DL>
<DD>Provides the line thickness used to display leaf borders.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Line thickness in pixels of leaf borders.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafTextFont()"><!-- --></A><H3>
getLeafTextFont</H3>
<PRE>
public java.lang.String <B>getLeafTextFont</B>()</PRE>
<DL>
<DD>Provides the name of the font used to display leaf labels.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Font used to display leaf labels.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowLeafBorder()"><!-- --></A><H3>
getShowLeafBorder</H3>
<PRE>
public boolean <B>getShowLeafBorder</B>()</PRE>
<DL>
<DD>Reports whether or not leaf nodes are shown with borders.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if leaf nodes are to be shown with borders.</DL>
</DD>
</DL>
<HR>

<A NAME="getBorderColour()"><!-- --></A><H3>
getBorderColour</H3>
<PRE>
public java.awt.Color <B>getBorderColour</B>()</PRE>
<DL>
<DD>Provides the colour used to display borders
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Colour used to display borders.</DL>
</DD>
</DL>
<HR>

<A NAME="getBranchAlignX()"><!-- --></A><H3>
getBranchAlignX</H3>
<PRE>
public int <B>getBranchAlignX</B>()</PRE>
<DL>
<DD>Provides the Processing branch text horizontal alignment type, one of LEFT, CENTER or RIGHT.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Horizontal branch text alignment.</DL>
</DD>
</DL>
<HR>

<A NAME="getBranchAlignY()"><!-- --></A><H3>
getBranchAlignY</H3>
<PRE>
public int <B>getBranchAlignY</B>()</PRE>
<DL>
<DD>Provides the Processing branch text vertical alignment type, one of TOP, CENTER or BOTTOM.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Vertical branch text alignment.</DL>
</DD>
</DL>
<HR>

<A NAME="getCurveRadius()"><!-- --></A><H3>
getCurveRadius</H3>
<PRE>
public float <B>getCurveRadius</B>()</PRE>
<DL>
<DD>Provides the curvature radius for rectangles. A value of 0 indicates sharp-cornered rectangles with larger
  values representing increasingly curved shapes.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Radius of rectangle corner curves pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="getWidth()"><!-- --></A><H3>
getWidth</H3>
<PRE>
public double <B>getWidth</B>()</PRE>
<DL>
<DD>Provides the width of the treemap in pixels.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Width of the treemap in pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="getHeight()"><!-- --></A><H3>
getHeight</H3>
<PRE>
public double <B>getHeight</B>()</PRE>
<DL>
<DD>Provides the height of the treemap in pixels.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Height of the treemap in pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafVectorWidth()"><!-- --></A><H3>
getLeafVectorWidth</H3>
<PRE>
public float <B>getLeafVectorWidth</B>()</PRE>
<DL>
<DD>Provides the width of leaf displacement vectors in pixels.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Width of the leaf displacement vectors in pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafMaxTextSize()"><!-- --></A><H3>
getLeafMaxTextSize</H3>
<PRE>
public float <B>getLeafMaxTextSize</B>()</PRE>
<DL>
<DD>Provides the maximum leaf text size pixels.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Maximum leaf text size in pixels.</DL>
</DD>
</DL>
<HR>

<A NAME="getMutation()"><!-- --></A><H3>
getMutation</H3>
<PRE>
public float <B>getMutation</B>()</PRE>
<DL>
<DD>Provides the mutation index that controls the degree of colour mutation when using evolutionary colour scheme.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Mutation index between 0 (inherits parent colour exactly) and 1 (independent of parent colour).</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafAlignX()"><!-- --></A><H3>
getLeafAlignX</H3>
<PRE>
public int <B>getLeafAlignX</B>()</PRE>
<DL>
<DD>Provides the Processing leaf text horizontal alignment type, one of LEFT, CENTER or RIGHT.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Horizontal leaf text alignment.</DL>
</DD>
</DL>
<HR>

<A NAME="getLeafAlignY()"><!-- --></A><H3>
getLeafAlignY</H3>
<PRE>
public int <B>getLeafAlignY</B>()</PRE>
<DL>
<DD>Provides the Processing leaf text vertical alignment type, one of TOP, CENTER or BOTTOM.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Vertical leaf text alignment.</DL>
</DD>
</DL>
<HR>

<A NAME="getFileType()"><!-- --></A><H3>
getFileType</H3>
<PRE>
public java.lang.String <B>getFileType</B>()</PRE>
<DL>
<DD>Provides the file type used for defining the hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Type of file format used to represent hierarchy.</DL>
</DD>
</DL>
<HR>

<A NAME="getInFileName()"><!-- --></A><H3>
getInFileName</H3>
<PRE>
public java.lang.String <B>getInFileName</B>()</PRE>
<DL>
<DD>Provides the name of the file used for defining the hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Name of file used to represent hierarchy.</DL>
</DD>
</DL>
<HR>

<A NAME="getOutFileName()"><!-- --></A><H3>
getOutFileName</H3>
<PRE>
public java.lang.String <B>getOutFileName</B>()</PRE>
<DL>
<DD>Provides the name of the file used for treemap coordinate output.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Name of file used for coordinates output or null if not defined.</DL>
</DD>
</DL>
<HR>

<A NAME="getImageFileName()"><!-- --></A><H3>
getImageFileName</H3>
<PRE>
public java.lang.String <B>getImageFileName</B>()</PRE>
<DL>
<DD>Provides the name of the file used for image output.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Name of file used for image output or null if not defined.</DL>
</DD>
</DL>
<HR>

<A NAME="getCTableFileName()"><!-- --></A><H3>
getCTableFileName</H3>
<PRE>
public java.lang.String <B>getCTableFileName</B>()</PRE>
<DL>
<DD>Provides the name of the file used for the treemap colour table.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Name of file used for the treemap colour table or null if not defined.</DL>
</DD>
</DL>
<HR>

<A NAME="getConfigFileName()"><!-- --></A><H3>
getConfigFileName</H3>
<PRE>
public java.lang.String <B>getConfigFileName</B>()</PRE>
<DL>
<DD>Provides the name of the file used to save this configuration or null if not to be saved.
  Note that unlike all other properties, this option is never itself saved to disk.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Name of file used for saving configuration options or null if not defined.</DL>
</DD>
</DL>
<HR>

<A NAME="getLayouts()"><!-- --></A><H3>
getLayouts</H3>
<PRE>
public java.lang.String[] <B>getLayouts</B>()</PRE>
<DL>
<DD>Provides a set of ordered layout settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of layout settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getAlignments()"><!-- --></A><H3>
getAlignments</H3>
<PRE>
public java.lang.String[] <B>getAlignments</B>()</PRE>
<DL>
<DD>Provides a set of ordered alignment settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of alignment settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getBorders()"><!-- --></A><H3>
getBorders</H3>
<PRE>
public double[] <B>getBorders</B>()</PRE>
<DL>
<DD>Provides a set of ordered border width settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of border width settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getBorderWeights()"><!-- --></A><H3>
getBorderWeights</H3>
<PRE>
public float[] <B>getBorderWeights</B>()</PRE>
<DL>
<DD>Provides a set of ordered border weight settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of border weight settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getBranchMaxTextSizes()"><!-- --></A><H3>
getBranchMaxTextSizes</H3>
<PRE>
public float[] <B>getBranchMaxTextSizes</B>()</PRE>
<DL>
<DD>Provides a set of ordered maximum branch text size settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of maximum branch text size settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getBranchTextColours()"><!-- --></A><H3>
getBranchTextColours</H3>
<PRE>
public java.awt.Color[] <B>getBranchTextColours</B>()</PRE>
<DL>
<DD>Provides a set of ordered branch text colour settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of branch text colour settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getBranchTextFonts()"><!-- --></A><H3>
getBranchTextFonts</H3>
<PRE>
public java.lang.String[] <B>getBranchTextFonts</B>()</PRE>
<DL>
<DD>Provides a set of ordered branch text font names for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of branch text font names.</DL>
</DD>
</DL>
<HR>

<A NAME="getBranchVectorWidths()"><!-- --></A><H3>
getBranchVectorWidths</H3>
<PRE>
public float[] <B>getBranchVectorWidths</B>()</PRE>
<DL>
<DD>Provides a set of ordered vector width settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of vector width settings.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowBranchDisplacements()"><!-- --></A><H3>
getShowBranchDisplacements</H3>
<PRE>
public boolean[] <B>getShowBranchDisplacements</B>()</PRE>
<DL>
<DD>Provides a set of branch displacement display settings for each level of the treemap hierarchy.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Ordered collection of branch displacement display settings.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TreeMapProperties.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapPanel.html" title="class in org.gicentre.treemappa"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/gicentre/treemappa/Version.html" title="class in org.gicentre.treemappa"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/gicentre/treemappa/TreeMapProperties.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TreeMapProperties.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>treeMappa V.3.2.1, API documentation generated 3rd April, 2014</i>
</BODY>
</HTML>
