<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_65) on Thu Apr 03 13:38:29 BST 2014 -->
<TITLE>
JWFrame
</TITLE>

<META NAME="date" CONTENT="2014-04-03">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../processingapi.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="JWFrame";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JWFrame.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/gicentre/treemappa/gui/DrawableFactory.html" title="class in org.gicentre.treemappa.gui"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/gicentre/treemappa/gui/JWInterruptionListener.html" title="interface in org.gicentre.treemappa.gui"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/gicentre/treemappa/gui/JWFrame.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="JWFrame.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_classes_inherited_from_class_javax.swing.JFrame">NESTED</A>&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_javax.swing.JFrame">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.gicentre.treemappa.gui</FONT>
<BR>
Class JWFrame</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">java.awt.Component
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">java.awt.Container
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">java.awt.Window
              <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">java.awt.Frame
                  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">javax.swing.JFrame
                      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.gicentre.treemappa.gui.JWFrame</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>java.awt.image.ImageObserver, java.awt.MenuContainer, java.io.Serializable, java.lang.Runnable, javax.accessibility.Accessible, javax.swing.RootPaneContainer, javax.swing.WindowConstants</DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../org/gicentre/treemappa/TreeFrame.html" title="class in org.gicentre.treemappa">TreeFrame</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>JWFrame</B><DT>extends javax.swing.JFrame<DT>implements java.lang.Runnable</DL>
</PRE>

<P>
Creates a containing window with status, progress, menu and  toolbar options. If this window 
  contains any buttons on its toolbar, it must contain equivalent menu items. Menu items need not
  have equivalent toolbar buttons.
  <br /><br />
  Menus are aligned with space for iconic representation. If icons are used they should be all the 
  same size (16x16 recommended). Alignment is forced by inserting blank icons of the same size where
  necessary. This icon should be located at images/blank.gif in the classpath of the VM that uses 
  this class.
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>3.2.1, 23rd March, 2011.</DD>
<DT><B>Author:</B></DT>
  <DD>Jo Wood, giCentre.</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../serialized-form.html#org.gicentre.treemappa.gui.JWFrame">Serialized Form</A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="nested_classes_inherited_from_class_javax.swing.JFrame"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Nested classes/interfaces inherited from class javax.swing.JFrame</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>javax.swing.JFrame.AccessibleJFrame</CODE></TD>
</TR>
</TABLE>
&nbsp;
<A NAME="nested_classes_inherited_from_class_java.awt.Frame"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Nested classes/interfaces inherited from class java.awt.Frame</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>java.awt.Frame.AccessibleAWTFrame</CODE></TD>
</TR>
</TABLE>
&nbsp;
<A NAME="nested_classes_inherited_from_class_java.awt.Window"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Nested classes/interfaces inherited from class java.awt.Window</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>java.awt.Window.AccessibleAWTWindow</CODE></TD>
</TR>
</TABLE>
&nbsp;
<A NAME="nested_classes_inherited_from_class_java.awt.Container"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Nested classes/interfaces inherited from class java.awt.Container</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>java.awt.Container.AccessibleAWTContainer</CODE></TD>
</TR>
</TABLE>
&nbsp;
<A NAME="nested_classes_inherited_from_class_java.awt.Component"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Nested classes/interfaces inherited from class java.awt.Component</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>java.awt.Component.AccessibleAWTComponent, java.awt.Component.BaselineResizeBehavior, java.awt.Component.BltBufferStrategy, java.awt.Component.FlipBufferStrategy</CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_javax.swing.JFrame"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class javax.swing.JFrame</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>accessibleContext, EXIT_ON_CLOSE, rootPane, rootPaneCheckingEnabled</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_java.awt.Frame"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class java.awt.Frame</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>CROSSHAIR_CURSOR, DEFAULT_CURSOR, E_RESIZE_CURSOR, HAND_CURSOR, ICONIFIED, MAXIMIZED_BOTH, MAXIMIZED_HORIZ, MAXIMIZED_VERT, MOVE_CURSOR, N_RESIZE_CURSOR, NE_RESIZE_CURSOR, NW_RESIZE_CURSOR, S_RESIZE_CURSOR, SE_RESIZE_CURSOR, SW_RESIZE_CURSOR, TEXT_CURSOR, W_RESIZE_CURSOR, WAIT_CURSOR</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_java.awt.Component"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class java.awt.Component</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>BOTTOM_ALIGNMENT, CENTER_ALIGNMENT, LEFT_ALIGNMENT, RIGHT_ALIGNMENT, TOP_ALIGNMENT</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_javax.swing.WindowConstants"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface javax.swing.WindowConstants</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>DISPOSE_ON_CLOSE, DO_NOTHING_ON_CLOSE, HIDE_ON_CLOSE</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_java.awt.image.ImageObserver"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface java.awt.image.ImageObserver</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>ABORT, ALLBITS, ERROR, FRAMEBITS, HEIGHT, PROPERTIES, SOMEBITS, WIDTH</CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#JWFrame(java.lang.String)">JWFrame</A></B>(java.lang.String&nbsp;title)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a top-level window with a given title.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#JWFrame(java.lang.String, java.lang.String, boolean, boolean, boolean)">JWFrame</A></B>(java.lang.String&nbsp;title,
        java.lang.String&nbsp;iconName,
        boolean&nbsp;showMenu,
        boolean&nbsp;showTools,
        boolean&nbsp;showStatus)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a top-level window with various decoration options.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addActionItem(int, javax.swing.JMenuItem, java.lang.String, java.lang.String, int, int, java.awt.event.ActionListener)">addActionItem</A></B>(int&nbsp;type,
              javax.swing.JMenuItem&nbsp;menu,
              java.lang.String&nbsp;name,
              java.lang.String&nbsp;icon,
              int&nbsp;mnemonic,
              int&nbsp;accelerator,
              java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu and button item.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addActionItem(int, javax.swing.JMenuItem, java.lang.String, java.lang.String, int, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)">addActionItem</A></B>(int&nbsp;type,
              javax.swing.JMenuItem&nbsp;menu,
              java.lang.String&nbsp;name,
              java.lang.String&nbsp;iconName,
              int&nbsp;mnemonic,
              int&nbsp;accelerator,
              javax.swing.ButtonGroup&nbsp;bg,
              java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu and button item.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addActionItem(javax.swing.JMenuItem, java.lang.String, int, java.awt.event.ActionListener)">addActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
              java.lang.String&nbsp;name,
              int&nbsp;mnemonic,
              java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu item to a given menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, java.awt.event.ActionListener)">addActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
              java.lang.String&nbsp;name,
              java.lang.String&nbsp;icon,
              int&nbsp;mnemonic,
              java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given menu and button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, int, java.awt.event.ActionListener)">addActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
              java.lang.String&nbsp;name,
              java.lang.String&nbsp;icon,
              int&nbsp;mnemonic,
              int&nbsp;accelerator,
              java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu and button item.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, int, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 boolean&nbsp;isSelected,
                 int&nbsp;mnemonic,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given checkbox menu item to a given menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 boolean&nbsp;isSelected,
                 int&nbsp;mnemonic,
                 javax.swing.ButtonGroup&nbsp;bg,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, java.lang.String, int, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 boolean&nbsp;isSelected,
                 java.lang.String&nbsp;icon,
                 int&nbsp;mnemonic,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, java.lang.String, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 boolean&nbsp;isSelected,
                 java.lang.String&nbsp;icon,
                 int&nbsp;mnemonic,
                 javax.swing.ButtonGroup&nbsp;bg,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, java.lang.String, int, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 boolean&nbsp;isSelected,
                 java.lang.String&nbsp;icon,
                 int&nbsp;mnemonic,
                 int&nbsp;accelerator,
                 javax.swing.ButtonGroup&nbsp;bg,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, int, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 int&nbsp;mnemonic,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given checkbox menu item to a given menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 int&nbsp;mnemonic,
                 javax.swing.ButtonGroup&nbsp;bg,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given checkbox menu item to a given menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, int, int, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 int&nbsp;mnemonic,
                 int&nbsp;accelerator,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 java.lang.String&nbsp;icon,
                 int&nbsp;mnemonic,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenuItem</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addBinActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)">addBinActionItem</A></B>(javax.swing.JMenuItem&nbsp;menu,
                 java.lang.String&nbsp;name,
                 java.lang.String&nbsp;icon,
                 int&nbsp;mnemonic,
                 javax.swing.ButtonGroup&nbsp;bg,
                 java.awt.event.ActionListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds given checkbox menu and toggle button items.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addButtonSeparator()">addButtonSeparator</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a separator to the tool bar.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addInterruptionListener(org.gicentre.treemappa.gui.JWInterruptionListener)">addInterruptionListener</A></B>(<A HREF="../../../../org/gicentre/treemappa/gui/JWInterruptionListener.html" title="interface in org.gicentre.treemappa.gui">JWInterruptionListener</A>&nbsp;interruptionListener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the given interruption listener to this window.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenu</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addMenu(javax.swing.JComponent, java.lang.String, int)">addMenu</A></B>(javax.swing.JComponent&nbsp;parent,
        java.lang.String&nbsp;name,
        int&nbsp;mnemonic)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu with mnemonic to a component such as a menu bar or sub menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenu</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addMenu(java.lang.String)">addMenu</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu without mnemonic to menu bar.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.JMenu</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addMenu(java.lang.String, int)">addMenu</A></B>(java.lang.String&nbsp;name,
        int&nbsp;mnemonic)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a given menu with mnemonic to menu bar.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#addMenuSeparator(javax.swing.JMenu)">addMenuSeparator</A></B>(javax.swing.JMenu&nbsp;menu)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds a separator to the given menu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#closeDown()">closeDown</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Asks the user if they really want to quit, then closes.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.Action</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#getAction(java.lang.String)">getAction</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the action item (button or menu item) associated with the given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#initWindow()">initWindow</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs any window initialisation that is required after the
 frame has been displayed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#removeInterruptionListener(org.gicentre.treemappa.gui.JWInterruptionListener)">removeInterruptionListener</A></B>(<A HREF="../../../../org/gicentre/treemappa/gui/JWInterruptionListener.html" title="interface in org.gicentre.treemappa.gui">JWInterruptionListener</A>&nbsp;interruptionListener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the given interruption listener from this window.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#run()">run</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays the frame as part of a threaded process.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#setMaxProgress(int)">setMaxProgress</A></B>(int&nbsp;maxProgress)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays the maximum progress value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#setMessage(java.lang.String)">setMessage</A></B>(java.lang.String&nbsp;text)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays the given message in the status bar.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#setMinProgress(int)">setMinProgress</A></B>(int&nbsp;minProgress)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Displays the minimum progress value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#setProgress(int)">setProgress</A></B>(int&nbsp;progress)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the current progress (should be between 0 and 100 unless 
 minimum or maximum progress values have been changed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gicentre/treemappa/gui/JWFrame.html#showProgress(boolean)">showProgress</A></B>(boolean&nbsp;visible)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shows or removes the progress bar from the frame.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_javax.swing.JFrame"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class javax.swing.JFrame</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>addImpl, createRootPane, frameInit, getAccessibleContext, getContentPane, getDefaultCloseOperation, getGlassPane, getGraphics, getJMenuBar, getLayeredPane, getRootPane, getTransferHandler, isDefaultLookAndFeelDecorated, isRootPaneCheckingEnabled, paramString, processWindowEvent, remove, repaint, setContentPane, setDefaultCloseOperation, setDefaultLookAndFeelDecorated, setGlassPane, setIconImage, setJMenuBar, setLayeredPane, setLayout, setRootPane, setRootPaneCheckingEnabled, setTransferHandler, update</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.awt.Frame"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.awt.Frame</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>addNotify, getCursorType, getExtendedState, getFrames, getIconImage, getMaximizedBounds, getMenuBar, getState, getTitle, isResizable, isUndecorated, remove, removeNotify, setCursor, setExtendedState, setMaximizedBounds, setMenuBar, setResizable, setState, setTitle, setUndecorated</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.awt.Window"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.awt.Window</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>addPropertyChangeListener, addPropertyChangeListener, addWindowFocusListener, addWindowListener, addWindowStateListener, applyResourceBundle, applyResourceBundle, createBufferStrategy, createBufferStrategy, dispose, getBufferStrategy, getFocusableWindowState, getFocusCycleRootAncestor, getFocusOwner, getFocusTraversalKeys, getGraphicsConfiguration, getIconImages, getInputContext, getListeners, getLocale, getModalExclusionType, getMostRecentFocusOwner, getOwnedWindows, getOwner, getOwnerlessWindows, getToolkit, getWarningString, getWindowFocusListeners, getWindowListeners, getWindows, getWindowStateListeners, hide, isActive, isAlwaysOnTop, isAlwaysOnTopSupported, isFocusableWindow, isFocusCycleRoot, isFocused, isLocationByPlatform, isShowing, pack, paint, postEvent, processEvent, processWindowFocusEvent, processWindowStateEvent, removeWindowFocusListener, removeWindowListener, removeWindowStateListener, reshape, setAlwaysOnTop, setBounds, setBounds, setCursor, setFocusableWindowState, setFocusCycleRoot, setIconImages, setLocationByPlatform, setLocationRelativeTo, setMinimumSize, setModalExclusionType, setSize, setSize, setVisible, show, toBack, toFront</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.awt.Container"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.awt.Container</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>add, add, add, add, add, addContainerListener, applyComponentOrientation, areFocusTraversalKeysSet, countComponents, deliverEvent, doLayout, findComponentAt, findComponentAt, getAlignmentX, getAlignmentY, getComponent, getComponentAt, getComponentAt, getComponentCount, getComponents, getComponentZOrder, getContainerListeners, getFocusTraversalPolicy, getInsets, getLayout, getMaximumSize, getMinimumSize, getMousePosition, getPreferredSize, insets, invalidate, isAncestorOf, isFocusCycleRoot, isFocusTraversalPolicyProvider, isFocusTraversalPolicySet, layout, list, list, locate, minimumSize, paintComponents, preferredSize, print, printComponents, processContainerEvent, remove, removeAll, removeContainerListener, setComponentZOrder, setFocusTraversalKeys, setFocusTraversalPolicy, setFocusTraversalPolicyProvider, setFont, transferFocusBackward, transferFocusDownCycle, validate, validateTree</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.awt.Component"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.awt.Component</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>action, add, addComponentListener, addFocusListener, addHierarchyBoundsListener, addHierarchyListener, addInputMethodListener, addKeyListener, addMouseListener, addMouseMotionListener, addMouseWheelListener, bounds, checkImage, checkImage, coalesceEvents, contains, contains, createImage, createImage, createVolatileImage, createVolatileImage, disable, disableEvents, dispatchEvent, enable, enable, enableEvents, enableInputMethods, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, firePropertyChange, getBackground, getBaseline, getBaselineResizeBehavior, getBounds, getBounds, getColorModel, getComponentListeners, getComponentOrientation, getCursor, getDropTarget, getFocusListeners, getFocusTraversalKeysEnabled, getFont, getFontMetrics, getForeground, getHeight, getHierarchyBoundsListeners, getHierarchyListeners, getIgnoreRepaint, getInputMethodListeners, getInputMethodRequests, getKeyListeners, getLocation, getLocation, getLocationOnScreen, getMouseListeners, getMouseMotionListeners, getMousePosition, getMouseWheelListeners, getName, getParent, getPeer, getPropertyChangeListeners, getPropertyChangeListeners, getSize, getSize, getTreeLock, getWidth, getX, getY, gotFocus, handleEvent, hasFocus, imageUpdate, inside, isBackgroundSet, isCursorSet, isDisplayable, isDoubleBuffered, isEnabled, isFocusable, isFocusOwner, isFocusTraversable, isFontSet, isForegroundSet, isLightweight, isMaximumSizeSet, isMinimumSizeSet, isOpaque, isPreferredSizeSet, isValid, isVisible, keyDown, keyUp, list, list, list, location, lostFocus, mouseDown, mouseDrag, mouseEnter, mouseExit, mouseMove, mouseUp, move, nextFocus, paintAll, prepareImage, prepareImage, printAll, processComponentEvent, processFocusEvent, processHierarchyBoundsEvent, processHierarchyEvent, processInputMethodEvent, processKeyEvent, processMouseEvent, processMouseMotionEvent, processMouseWheelEvent, removeComponentListener, removeFocusListener, removeHierarchyBoundsListener, removeHierarchyListener, removeInputMethodListener, removeKeyListener, removeMouseListener, removeMouseMotionListener, removeMouseWheelListener, removePropertyChangeListener, removePropertyChangeListener, repaint, repaint, repaint, requestFocus, requestFocus, requestFocusInWindow, requestFocusInWindow, resize, resize, setBackground, setComponentOrientation, setDropTarget, setEnabled, setFocusable, setFocusTraversalKeysEnabled, setForeground, setIgnoreRepaint, setLocale, setLocation, setLocation, setMaximumSize, setName, setPreferredSize, show, size, toString, transferFocus, transferFocusUpCycle</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.awt.MenuContainer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface java.awt.MenuContainer</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>getFont, postEvent</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="JWFrame(java.lang.String)"><!-- --></A><H3>
JWFrame</H3>
<PRE>
public <B>JWFrame</B>(java.lang.String&nbsp;title)</PRE>
<DL>
<DD>Creates a top-level window with a given title. Assumes that an icon file 
 called Icon16.gif is located in he 'images' subdirectory.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>title</CODE> - Title of window.</DL>
</DL>
<HR>

<A NAME="JWFrame(java.lang.String, java.lang.String, boolean, boolean, boolean)"><!-- --></A><H3>
JWFrame</H3>
<PRE>
public <B>JWFrame</B>(java.lang.String&nbsp;title,
               java.lang.String&nbsp;iconName,
               boolean&nbsp;showMenu,
               boolean&nbsp;showTools,
               boolean&nbsp;showStatus)</PRE>
<DL>
<DD>Creates a top-level window with various decoration options.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>title</CODE> - Title of window.<DD><CODE>iconName</CODE> - Name of file containing icon. File should be a .gif or .jpeg in the 'images' subdirectory.<DD><CODE>showMenu</CODE> - Menu will be displayed if true;<DD><CODE>showTools</CODE> - Toolbar will be displayed if true;<DD><CODE>showStatus</CODE> - Statusbar will be displayed if true;</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="addMenu(java.lang.String)"><!-- --></A><H3>
addMenu</H3>
<PRE>
public javax.swing.JMenu <B>addMenu</B>(java.lang.String&nbsp;name)</PRE>
<DL>
<DD>Adds a given menu without mnemonic to menu bar.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Name on menu to add.
<DT><B>Returns:</B><DD>Reference to the menu just created. This is useful for adding menu items.</DL>
</DD>
</DL>
<HR>

<A NAME="addMenu(java.lang.String, int)"><!-- --></A><H3>
addMenu</H3>
<PRE>
public javax.swing.JMenu <B>addMenu</B>(java.lang.String&nbsp;name,
                                 int&nbsp;mnemonic)</PRE>
<DL>
<DD>Adds a given menu with mnemonic to menu bar.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Name on menu to add.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.
<DT><B>Returns:</B><DD>Reference to the menu just created. This is useful for adding menu items.</DL>
</DD>
</DL>
<HR>

<A NAME="addMenu(javax.swing.JComponent, java.lang.String, int)"><!-- --></A><H3>
addMenu</H3>
<PRE>
public javax.swing.JMenu <B>addMenu</B>(javax.swing.JComponent&nbsp;parent,
                                 java.lang.String&nbsp;name,
                                 int&nbsp;mnemonic)</PRE>
<DL>
<DD>Adds a given menu with mnemonic to a component such as a menu bar or sub menu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>parent</CODE> - Component onto which a menu is added.<DD><CODE>name</CODE> - Name on menu to add.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.
<DT><B>Returns:</B><DD>Reference to the menu just created. This is useful for adding menu items.</DL>
</DD>
</DL>
<HR>

<A NAME="addMenuSeparator(javax.swing.JMenu)"><!-- --></A><H3>
addMenuSeparator</H3>
<PRE>
public void <B>addMenuSeparator</B>(javax.swing.JMenu&nbsp;menu)</PRE>
<DL>
<DD>Adds a separator to the given menu. This should be called in sequence between
 adding other menus/menu items to the menu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which a separator.</DL>
</DD>
</DL>
<HR>

<A NAME="addButtonSeparator()"><!-- --></A><H3>
addButtonSeparator</H3>
<PRE>
public void <B>addButtonSeparator</B>()</PRE>
<DL>
<DD>Adds a separator to the tool bar. This should be called in sequence between
 adding other items to the toolbar.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addActionItem(javax.swing.JMenuItem, java.lang.String, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                           java.lang.String&nbsp;name,
                                           int&nbsp;mnemonic,
                                           java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given menu item to a given menu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>listener</CODE> - Action listener to respond to menu selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                           java.lang.String&nbsp;name,
                                           java.lang.String&nbsp;icon,
                                           int&nbsp;mnemonic,
                                           java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given menu and button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                           java.lang.String&nbsp;name,
                                           java.lang.String&nbsp;icon,
                                           int&nbsp;mnemonic,
                                           int&nbsp;accelerator,
                                           java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given menu and button item.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>accelerator</CODE> - Keyboard accelerator to use. Uses the system-dependent mask (e.g. CTRL on windows, Command on MacOS).<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addActionItem(int, javax.swing.JMenuItem, java.lang.String, java.lang.String, int, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addActionItem</B>(int&nbsp;type,
                                           javax.swing.JMenuItem&nbsp;menu,
                                           java.lang.String&nbsp;name,
                                           java.lang.String&nbsp;icon,
                                           int&nbsp;mnemonic,
                                           int&nbsp;accelerator,
                                           java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given menu and button item.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - Type of menu (NORMAL, CHECKBOX).<DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>accelerator</CODE> - Keyboard accelerator to use. Uses the system-dependent mask (e.g. CTRL on windows, Command on MacOS).<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              int&nbsp;mnemonic,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given checkbox menu item to a given menu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>listener</CODE> - Action listener to respond to menu selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              boolean&nbsp;isSelected,
                                              int&nbsp;mnemonic,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given checkbox menu item to a given menu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>isSelected</CODE> - Item will be selected if true.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>listener</CODE> - Action listener to respond to menu selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              int&nbsp;mnemonic,
                                              javax.swing.ButtonGroup&nbsp;bg,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given checkbox menu item to a given menu.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>bg</CODE> - Button group for grouped toggle buttons/checkboxes.<DD><CODE>listener</CODE> - Action listener to respond to menu selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              java.lang.String&nbsp;icon,
                                              int&nbsp;mnemonic,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items. Assumes added item is not selected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, java.lang.String, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              boolean&nbsp;isSelected,
                                              java.lang.String&nbsp;icon,
                                              int&nbsp;mnemonic,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>isSelected</CODE> - Item will be selected if true.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, java.lang.String, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              java.lang.String&nbsp;icon,
                                              int&nbsp;mnemonic,
                                              javax.swing.ButtonGroup&nbsp;bg,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>bg</CODE> - Button group for grouped toggle buttons/checkboxes.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              boolean&nbsp;isSelected,
                                              int&nbsp;mnemonic,
                                              javax.swing.ButtonGroup&nbsp;bg,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>isSelected</CODE> - Item will be selected if true.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>bg</CODE> - Button group for grouped toggle buttons/checkboxes.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, java.lang.String, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              boolean&nbsp;isSelected,
                                              java.lang.String&nbsp;icon,
                                              int&nbsp;mnemonic,
                                              javax.swing.ButtonGroup&nbsp;bg,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>isSelected</CODE> - Item will be selected if true.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>bg</CODE> - Button group for grouped toggle buttons/checkboxes.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, int, int, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              int&nbsp;mnemonic,
                                              int&nbsp;accelerator,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>accelerator</CODE> - Keyboard accelerator to use. Uses the system-dependent mask (e.g. CTRL on windows, Command on MacOS).<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addBinActionItem(javax.swing.JMenuItem, java.lang.String, boolean, java.lang.String, int, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)"><!-- --></A><H3>
addBinActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addBinActionItem</B>(javax.swing.JMenuItem&nbsp;menu,
                                              java.lang.String&nbsp;name,
                                              boolean&nbsp;isSelected,
                                              java.lang.String&nbsp;icon,
                                              int&nbsp;mnemonic,
                                              int&nbsp;accelerator,
                                              javax.swing.ButtonGroup&nbsp;bg,
                                              java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds given checkbox menu and toggle button items.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>isSelected</CODE> - Item will be selected if true.<DD><CODE>icon</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>accelerator</CODE> - Keyboard accelerator to use. Uses the system-dependent mask (e.g. CTRL on windows, Command on MacOS).<DD><CODE>bg</CODE> - Button group for grouped toggle buttons/checkboxes.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="addActionItem(int, javax.swing.JMenuItem, java.lang.String, java.lang.String, int, int, javax.swing.ButtonGroup, java.awt.event.ActionListener)"><!-- --></A><H3>
addActionItem</H3>
<PRE>
public javax.swing.JMenuItem <B>addActionItem</B>(int&nbsp;type,
                                           javax.swing.JMenuItem&nbsp;menu,
                                           java.lang.String&nbsp;name,
                                           java.lang.String&nbsp;iconName,
                                           int&nbsp;mnemonic,
                                           int&nbsp;accelerator,
                                           javax.swing.ButtonGroup&nbsp;bg,
                                           java.awt.event.ActionListener&nbsp;listener)</PRE>
<DL>
<DD>Adds a given menu and button item.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - Type of menu (NORMAL, CHECKBOX).<DD><CODE>menu</CODE> - Menu onto which this menu item is added.<DD><CODE>name</CODE> - Name on the new menu item to add.<DD><CODE>iconName</CODE> - Name of file containing icon or null if no icon.<DD><CODE>mnemonic</CODE> - Keyboard mnemonic to use.<DD><CODE>accelerator</CODE> - Keyboard accelerator to use. Uses the system-dependent mask (e.g. CTRL on windows, Command on MacOS).<DD><CODE>bg</CODE> - Button group for linking items together.<DD><CODE>listener</CODE> - Action listener to respond to menu or button selection.
<DT><B>Returns:</B><DD>Reference to the menu item just created. This is useful for adding sub-menus.</DL>
</DD>
</DL>
<HR>

<A NAME="getAction(java.lang.String)"><!-- --></A><H3>
getAction</H3>
<PRE>
public javax.swing.Action <B>getAction</B>(java.lang.String&nbsp;name)</PRE>
<DL>
<DD>Returns the action item (button or menu item) associated with the given name.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - Name of action item to search for. Should be lower case without ellipsis.
<DT><B>Returns:</B><DD>The first action item that has the given name, or null of nothing found.
         Should be all lower case and without ellipsis.</DL>
</DD>
</DL>
<HR>

<A NAME="setMessage(java.lang.String)"><!-- --></A><H3>
setMessage</H3>
<PRE>
public void <B>setMessage</B>(java.lang.String&nbsp;text)</PRE>
<DL>
<DD>Displays the given message in the status bar.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>text</CODE> - Message to display.</DL>
</DD>
</DL>
<HR>

<A NAME="setMinProgress(int)"><!-- --></A><H3>
setMinProgress</H3>
<PRE>
public void <B>setMinProgress</B>(int&nbsp;minProgress)</PRE>
<DL>
<DD>Displays the minimum progress value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>minProgress</CODE> - Minimum progress value.</DL>
</DD>
</DL>
<HR>

<A NAME="setMaxProgress(int)"><!-- --></A><H3>
setMaxProgress</H3>
<PRE>
public void <B>setMaxProgress</B>(int&nbsp;maxProgress)</PRE>
<DL>
<DD>Displays the maximum progress value.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>maxProgress</CODE> - Maximum progress value.</DL>
</DD>
</DL>
<HR>

<A NAME="setProgress(int)"><!-- --></A><H3>
setProgress</H3>
<PRE>
public void <B>setProgress</B>(int&nbsp;progress)</PRE>
<DL>
<DD>Sets the current progress (should be between 0 and 100 unless 
 minimum or maximum progress values have been changed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>progress</CODE> - progress value.</DL>
</DD>
</DL>
<HR>

<A NAME="showProgress(boolean)"><!-- --></A><H3>
showProgress</H3>
<PRE>
public void <B>showProgress</B>(boolean&nbsp;visible)</PRE>
<DL>
<DD>Shows or removes the progress bar from the frame.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>visible</CODE> - Progress bar will be visible if true;</DL>
</DD>
</DL>
<HR>

<A NAME="addInterruptionListener(org.gicentre.treemappa.gui.JWInterruptionListener)"><!-- --></A><H3>
addInterruptionListener</H3>
<PRE>
public void <B>addInterruptionListener</B>(<A HREF="../../../../org/gicentre/treemappa/gui/JWInterruptionListener.html" title="interface in org.gicentre.treemappa.gui">JWInterruptionListener</A>&nbsp;interruptionListener)</PRE>
<DL>
<DD>Adds the given interruption listener to this window. The
 listener will be informed whenever the progress bar is clicked.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interruptionListener</CODE> - Object to be informed of an 
        interruption request.</DL>
</DD>
</DL>
<HR>

<A NAME="removeInterruptionListener(org.gicentre.treemappa.gui.JWInterruptionListener)"><!-- --></A><H3>
removeInterruptionListener</H3>
<PRE>
public boolean <B>removeInterruptionListener</B>(<A HREF="../../../../org/gicentre/treemappa/gui/JWInterruptionListener.html" title="interface in org.gicentre.treemappa.gui">JWInterruptionListener</A>&nbsp;interruptionListener)</PRE>
<DL>
<DD>Removes the given interruption listener from this window.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interruptionListener</CODE> - Listener to be removed.
<DT><B>Returns:</B><DD>True if listener was present and has been successfully removed.</DL>
</DD>
</DL>
<HR>

<A NAME="run()"><!-- --></A><H3>
run</H3>
<PRE>
public void <B>run</B>()</PRE>
<DL>
<DD>Displays the frame as part of a threaded process. This can
 be used when called with EventQueue.invokeLater() to ensure
 that the window is invoked in a thread-safe manner.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>run</CODE> in interface <CODE>java.lang.Runnable</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="initWindow()"><!-- --></A><H3>
initWindow</H3>
<PRE>
protected void <B>initWindow</B>()</PRE>
<DL>
<DD>Performs any window initialisation that is required after the
 frame has been displayed. Not usually required, but this can be
 overridden for subclasses that need to perform some dynamic display
 changes or need to capture the graphics context of this frame.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="closeDown()"><!-- --></A><H3>
closeDown</H3>
<PRE>
protected void <B>closeDown</B>()</PRE>
<DL>
<DD>Asks the user if they really want to quit, then closes.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/JWFrame.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/gicentre/treemappa/gui/DrawableFactory.html" title="class in org.gicentre.treemappa.gui"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/gicentre/treemappa/gui/JWInterruptionListener.html" title="interface in org.gicentre.treemappa.gui"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/gicentre/treemappa/gui/JWFrame.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="JWFrame.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_classes_inherited_from_class_javax.swing.JFrame">NESTED</A>&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_javax.swing.JFrame">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>treeMappa V.3.2.1, API documentation generated 3rd April, 2014</i>
</BODY>
</HTML>
