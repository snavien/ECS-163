<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_65) on Thu Apr 03 13:38:29 BST 2014 -->
<TITLE>
TreeMappa
</TITLE>

<META NAME="date" CONTENT="2014-04-03">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../processingapi.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TreeMappa";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TreeMappa.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapNode.html" title="class in org.gicentre.treemappa"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapPanel.html" title="class in org.gicentre.treemappa"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/gicentre/treemappa/TreeMappa.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TreeMappa.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.gicentre.treemappa</FONT>
<BR>
Class TreeMappa</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.gicentre.treemappa.TreeMappa</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>TreeMappa</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
Class to read tree data and create treemaps and treemap output files.
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>3.2.1, 9th July, 2012.</DD>
<DT><B>Author:</B></DT>
  <DD>Jo Wood, giCentre.</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#TreeMappa(org.gicentre.treemappa.TreeMapProperties)">TreeMappa</A></B>(<A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html" title="class in org.gicentre.treemappa">TreeMapProperties</A>&nbsp;props)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an object capable of creating a treemap from the hierarchical data identified in the given
  properties.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#buildTreeMap()">buildTreeMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Builds the treemap from the hierarchical data stored in this object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapPanel.html" title="class in org.gicentre.treemappa">TreeMapPanel</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#createPanel()">createPanel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a panel in which the treemap is displayed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeFrame.html" title="class in org.gicentre.treemappa">TreeFrame</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#createWindow()">createWindow</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a window in which the treemap is displayed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#getAllowLeafBorders()">getAllowLeafBorders</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>Should use getShowLeafBorders() instead.</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html" title="class in org.gicentre.treemappa">TreeMapProperties</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#getConfig()">getConfig</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the configuration options used to create the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#getNeedsRebuilding()">getNeedsRebuilding</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not the treemap needs building.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapNode.html" title="class in org.gicentre.treemappa">TreeMapNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#getRoot()">getRoot</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides the root node of the treeMap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#getShowLeafBorders()">getShowLeafBorders</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reports whether or not leaf nodes have borders.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;javax.swing.tree.TreeModel</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#getTreeModel()">getTreeModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provides a <code>TreeModel</code> tree model view of this treemap object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#readData()">readData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads in the data from the file identified in the treemap configuration file provided to 
  the constructor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#readData(org.gicentre.treemappa.PTreeMappa)">readData</A></B>(<A HREF="../../../org/gicentre/treemappa/PTreeMappa.html" title="class in org.gicentre.treemappa">PTreeMappa</A>&nbsp;pTreeMappa)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads in the data from the file identified in the given PTreeMappa object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setAlignment(int, java.lang.String)">setAlignment</A></B>(int&nbsp;level,
             java.lang.String&nbsp;alignment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the alignment setting for the given level of the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setAlignments(java.lang.String)">setAlignments</A></B>(java.lang.String&nbsp;alignment)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the alignment settings for all levels within the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setAllowLeafBorders(boolean)">setAllowLeafBorders</A></B>(boolean&nbsp;allowLeafBorders)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines whether or not leaf nodes have borders.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setBorder(int, float)">setBorder</A></B>(int&nbsp;level,
          float&nbsp;borderSize)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the border size of the nodes at the given level in the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setBorders(double)">setBorders</A></B>(double&nbsp;borderSize)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the border size of the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setHeight(float)">setHeight</A></B>(float&nbsp;height)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the new height of the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setLayout(int, java.lang.String)">setLayout</A></B>(int&nbsp;level,
          java.lang.String&nbsp;layout)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the new layout for the given level in the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setLayouts(java.lang.String)">setLayouts</A></B>(java.lang.String&nbsp;layout)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the a new default layout for the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setRoot(org.gicentre.treemappa.TreeMapNode)">setRoot</A></B>(<A HREF="../../../org/gicentre/treemappa/TreeMapNode.html" title="class in org.gicentre.treemappa">TreeMapNode</A>&nbsp;root)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the new tree data to be represented by the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#setWidth(float)">setWidth</A></B>(float&nbsp;width)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the new width of the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#showStatistics()">showStatistics</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Display the summary statistics describing the treemap.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#writeImage()">writeImage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Saves the treeMap displayed in the treeMap window as an image file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/gicentre/treemappa/TreeMappa.html#writeOutput()">writeOutput</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Saves the current treeMap as a file.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TreeMappa(org.gicentre.treemappa.TreeMapProperties)"><!-- --></A><H3>
TreeMappa</H3>
<PRE>
public <B>TreeMappa</B>(<A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html" title="class in org.gicentre.treemappa">TreeMapProperties</A>&nbsp;props)</PRE>
<DL>
<DD>Creates an object capable of creating a treemap from the hierarchical data identified in the given
  properties. These properties can also specify the appearance and output format of the treemap.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>props</CODE> - Properties defining the data and appearance associated with the treemap.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="readData()"><!-- --></A><H3>
readData</H3>
<PRE>
public boolean <B>readData</B>()</PRE>
<DL>
<DD>Reads in the data from the file identified in the treemap configuration file provided to 
  the constructor.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if data read without problems.</DL>
</DD>
</DL>
<HR>

<A NAME="readData(org.gicentre.treemappa.PTreeMappa)"><!-- --></A><H3>
readData</H3>
<PRE>
public boolean <B>readData</B>(<A HREF="../../../org/gicentre/treemappa/PTreeMappa.html" title="class in org.gicentre.treemappa">PTreeMappa</A>&nbsp;pTreeMappa)</PRE>
<DL>
<DD>Reads in the data from the file identified in the given PTreeMappa object. This version is used
  when reading data from a Processing applet and avoids security exceptions by assuming data are
  stored in the Processing applet location.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pTreeMappa</CODE> - Processing interface to treemappa that handles files.
<DT><B>Returns:</B><DD>True if data read without problems.</DL>
</DD>
</DL>
<HR>

<A NAME="buildTreeMap()"><!-- --></A><H3>
buildTreeMap</H3>
<PRE>
public boolean <B>buildTreeMap</B>()</PRE>
<DL>
<DD>Builds the treemap from the hierarchical data stored in this object. The size of the treemap
  is determined by configuration properties supplied to the constructor. This method should
  only be called after <code>readData()</code> has been called to store the hierarchical data to map.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if the tree has been built without problems.</DL>
</DD>
</DL>
<HR>

<A NAME="writeOutput()"><!-- --></A><H3>
writeOutput</H3>
<PRE>
public boolean <B>writeOutput</B>()</PRE>
<DL>
<DD>Saves the current treeMap as a file. This might be a shapefile or text file depending on options
  specified by the configuration properties supplied to the constructor.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if output written successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="createWindow()"><!-- --></A><H3>
createWindow</H3>
<PRE>
public <A HREF="../../../org/gicentre/treemappa/TreeFrame.html" title="class in org.gicentre.treemappa">TreeFrame</A> <B>createWindow</B>()</PRE>
<DL>
<DD>Creates a window in which the treemap is displayed.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>New window created or null if there was a problem creating treeMap window.</DL>
</DD>
</DL>
<HR>

<A NAME="createPanel()"><!-- --></A><H3>
createPanel</H3>
<PRE>
public <A HREF="../../../org/gicentre/treemappa/TreeMapPanel.html" title="class in org.gicentre.treemappa">TreeMapPanel</A> <B>createPanel</B>()</PRE>
<DL>
<DD>Creates a panel in which the treemap is displayed. This method can be used if you wish 
  to incorporate a treemap display inside its own GUI.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Panel in which the treemap is displayed or null if problem creating treemap panel.</DL>
</DD>
</DL>
<HR>

<A NAME="getRoot()"><!-- --></A><H3>
getRoot</H3>
<PRE>
public <A HREF="../../../org/gicentre/treemappa/TreeMapNode.html" title="class in org.gicentre.treemappa">TreeMapNode</A> <B>getRoot</B>()</PRE>
<DL>
<DD>Provides the root node of the treeMap. The root should contain links to all its children and
  therefore the entire treemap.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Root of the treemap or null if the treemap has not yet been built.</DL>
</DD>
</DL>
<HR>

<A NAME="setRoot(org.gicentre.treemappa.TreeMapNode)"><!-- --></A><H3>
setRoot</H3>
<PRE>
public void <B>setRoot</B>(<A HREF="../../../org/gicentre/treemappa/TreeMapNode.html" title="class in org.gicentre.treemappa">TreeMapNode</A>&nbsp;root)</PRE>
<DL>
<DD>Sets the new tree data to be represented by the treemap. Note that the new treemap will not be created
  until a call to <code>buildTreeMap()</code> is made.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>root</CODE> - Root of the tree to be represented as a treemap.</DL>
</DD>
</DL>
<HR>

<A NAME="writeImage()"><!-- --></A><H3>
writeImage</H3>
<PRE>
public boolean <B>writeImage</B>()</PRE>
<DL>
<DD>Saves the treeMap displayed in the treeMap window as an image file. The name of the file should be
  specified in the configuration properties supplied to the constructor.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if image written successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="showStatistics()"><!-- --></A><H3>
showStatistics</H3>
<PRE>
public boolean <B>showStatistics</B>()</PRE>
<DL>
<DD>Display the summary statistics describing the treemap.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if summary statistics were able to be calculated.</DL>
</DD>
</DL>
<HR>

<A NAME="getConfig()"><!-- --></A><H3>
getConfig</H3>
<PRE>
public <A HREF="../../../org/gicentre/treemappa/TreeMapProperties.html" title="class in org.gicentre.treemappa">TreeMapProperties</A> <B>getConfig</B>()</PRE>
<DL>
<DD>Provides the configuration options used to create the treemap. Note that these properties will
  reflect any programmatic changes that have been made that affect the treemap. For example, if
  <code>setWidth()</code> or <code>setBorder()</code> have been called, the configuration options
  will reflect these new properties.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>Configuration options used to create the treemap.</DL>
</DD>
</DL>
<HR>

<A NAME="getTreeModel()"><!-- --></A><H3>
getTreeModel</H3>
<PRE>
public javax.swing.tree.TreeModel <B>getTreeModel</B>()</PRE>
<DL>
<DD>Provides a <code>TreeModel</code> tree model view of this treemap object. Can be used for
  Swing components that require a TreeModel.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>TreeModel view of this tree, or null if the treemap has not yet been created.</DL>
</DD>
</DL>
<HR>

<A NAME="getNeedsRebuilding()"><!-- --></A><H3>
getNeedsRebuilding</H3>
<PRE>
public boolean <B>getNeedsRebuilding</B>()</PRE>
<DL>
<DD>Reports whether or not the treemap needs building. It will need rebuilding if (a) it has
  not yet been created, or (b) some property that affects layout has been changed, such
  as the layout algorithm or the border size. The treemap can be rebuilt with a call to
  <code>buildTreeMap()</code>. Note that if you make changes to one or more of the 
  <code>TreeMapNode</code>s dirctly (ie not via one of the methods in this class) this may
  require a rebuilding of the tree before they come into effect even if this method returns false.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if the treemap needs rebuilding.</DL>
</DD>
</DL>
<HR>

<A NAME="getAllowLeafBorders()"><!-- --></A><H3>
getAllowLeafBorders</H3>
<PRE>
public boolean <B>getAllowLeafBorders</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>Should use getShowLeafBorders() instead.</I>
<P>
<DD>Reports whether or not leaf nodes have borders.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if leaf nodes are to be laid out with borders.</DL>
</DD>
</DL>
<HR>

<A NAME="getShowLeafBorders()"><!-- --></A><H3>
getShowLeafBorders</H3>
<PRE>
public boolean <B>getShowLeafBorders</B>()</PRE>
<DL>
<DD>Reports whether or not leaf nodes have borders.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>True if leaf nodes are to be laid out with borders.</DL>
</DD>
</DL>
<HR>

<A NAME="setAlignments(java.lang.String)"><!-- --></A><H3>
setAlignments</H3>
<PRE>
public boolean <B>setAlignments</B>(java.lang.String&nbsp;alignment)</PRE>
<DL>
<DD>Sets the alignment settings for all levels within the treemap. Note that since this operation 
  requires the recalculation of the treemap layout, no changes will be made until
  <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>alignment</CODE> - Alignment setting to use. Valid values are 'horizontal', 'vertical' and 'free'.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setAlignment(int, java.lang.String)"><!-- --></A><H3>
setAlignment</H3>
<PRE>
public boolean <B>setAlignment</B>(int&nbsp;level,
                            java.lang.String&nbsp;alignment)</PRE>
<DL>
<DD>Sets the alignment setting for the given level of the treemap. Note that since this operation 
  requires the recalculation of the treemap layout, no changes will be made until
  <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>level</CODE> - Level of the hierarchy at which the given border setting is to apply.<DD><CODE>alignment</CODE> - Alignment setting to use. Valid values are 'horizontal', 'vertical' and 'free'.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setAllowLeafBorders(boolean)"><!-- --></A><H3>
setAllowLeafBorders</H3>
<PRE>
public boolean <B>setAllowLeafBorders</B>(boolean&nbsp;allowLeafBorders)</PRE>
<DL>
<DD>Determines whether or not leaf nodes have borders.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>allowLeafBorders</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="setBorders(double)"><!-- --></A><H3>
setBorders</H3>
<PRE>
public boolean <B>setBorders</B>(double&nbsp;borderSize)</PRE>
<DL>
<DD>Sets the border size of the treemap. Note that since this operation requires the recalculation
  of the treemap layout, no changes will be made until <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>borderSize</CODE> - Border size used to separate treemap nodes.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setBorder(int, float)"><!-- --></A><H3>
setBorder</H3>
<PRE>
public boolean <B>setBorder</B>(int&nbsp;level,
                         float&nbsp;borderSize)</PRE>
<DL>
<DD>Sets the border size of the nodes at the given level in the treemap. Note that since this
  operation requires the recalculation of the treemap layout, no changes will be made until 
  <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>level</CODE> - Level of the hierarchy at which the given border setting is to apply.<DD><CODE>borderSize</CODE> - Border size used to separate treemap nodes.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setLayouts(java.lang.String)"><!-- --></A><H3>
setLayouts</H3>
<PRE>
public boolean <B>setLayouts</B>(java.lang.String&nbsp;layout)</PRE>
<DL>
<DD>Sets the a new default layout for the treemap. Note that since this operation requires the
  recalculation of the treemap layout, no changes will be made until <code>buildTreeMap()</code> 
  is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>layout</CODE> - Name of new layout algorithm to use.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setLayout(int, java.lang.String)"><!-- --></A><H3>
setLayout</H3>
<PRE>
public boolean <B>setLayout</B>(int&nbsp;level,
                         java.lang.String&nbsp;layout)</PRE>
<DL>
<DD>Sets the new layout for the given level in the treemap. Note that since this operation 
  requires the recalculation of the treemap layout, no changes will be made until 
  <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>level</CODE> - Level of the hierarchy at which the given layout setting is to apply.<DD><CODE>layout</CODE> - Name of new layout algorithm to use.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setWidth(float)"><!-- --></A><H3>
setWidth</H3>
<PRE>
public boolean <B>setWidth</B>(float&nbsp;width)</PRE>
<DL>
<DD>Sets the new width of the treemap. This may or may not correspond to real pixel coordinates
  depending on whether a <code>TreeMapPanel</code> has been created to display this treemap.
  Note that since this operation requires the recalculation of the treemap layout, no changes 
  will be made until <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>width</CODE> - New width of of the treemap.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<HR>

<A NAME="setHeight(float)"><!-- --></A><H3>
setHeight</H3>
<PRE>
public boolean <B>setHeight</B>(float&nbsp;height)</PRE>
<DL>
<DD>Sets the new height of the treemap. This may or may not correspond to real pixel coordinates
  depending on whether a <code>TreeMapPanel</code> has been created to display this treemap.
  Note that since this operation requires the recalculation of the treemap layout, no changes 
  will be made until <code>buildTreeMap()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>height</CODE> - New height of of the treemap.
<DT><B>Returns:</B><DD>True if new property is updated successfully.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TreeMappa.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapNode.html" title="class in org.gicentre.treemappa"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/gicentre/treemappa/TreeMapPanel.html" title="class in org.gicentre.treemappa"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/gicentre/treemappa/TreeMappa.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TreeMappa.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
<i>treeMappa V.3.2.1, API documentation generated 3rd April, 2014</i>
</BODY>
</HTML>
